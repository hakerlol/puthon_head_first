import logging

from odd.artifact import XMLRecord, XMLDocument
from odd.plugin import Plugin

_LOG = logging.getLogger(__name__)


def is_noupdate(node) -> bool:
    parent = node.getparent()
    if parent is None:
        _LOG.warning("Element <%s> has no parent tag", node.tag)
        return False

    # TODO: Limit tags based on Odoo version (e.g. no `odoo` in v8).
    if parent.tag not in ("data", "odoo", "openerp"):
        raise ValueError(f"Unexpected <record> parent tag: {parent.tag}")
    if "noupdate" in parent.attrib:
        return (parent.get("noupdate") or "").lower() in ("1", "true")
    else:
        if parent.tag == "data":
            return is_noupdate(parent)
        else:
            return False


class XMLRecordEmitter(Plugin):
    _handles = {"xml_document"}
    _emits = {"xml_record"}

    def on_xml_document(self, xml_document: XMLDocument):
        # TODO: Use more precise XPath expressions, e.g. `//odoo/data/record`,
        # based also on Odoo version.
        for node in xml_document.node.xpath("//record"):
            yield XMLRecord(
                xml_document.addon, xml_document.path, node, is_noupdate(node)
            )
