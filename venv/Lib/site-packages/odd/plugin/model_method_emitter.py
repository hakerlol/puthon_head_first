import ast

from odd.artifact import ModelDefinition, ModelMethod
from odd.ast_utils import search_in_scope
from odd.plugin import Plugin


class ModelMethodEmitter(Plugin):
    _handles = {"model_definition"}
    _emits = {"model_method"}

    def on_model_definition(self, model: ModelDefinition):
        for funcdef in search_in_scope(model.node, ast.FunctionDef):
            yield ModelMethod(funcdef, model)
